/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Rem;

import DAO.AfpDAO;
import DAO.PersonaDAO;
import DAO.RemuneracionDAO;
import VO.Persona;
import VO.Remuneracion;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;


/**
 *
 * @author Drebin01
 */
public class RemIFMPagoMultiple extends javax.swing.JInternalFrame {

    /**
     * Creates new form RemIFMPagoMultiple
     */
    public RemIFMPagoMultiple() {
        initComponents();
        jButtonSeleccionarTodo.setEnabled(false);
        jButtonLimpiarLista.setEnabled(false);
        mostrarListaPersonasInTable();
    }
    
    public void mostrarListaPersonasInTable(){
        PersonaDAO daoPersona = new PersonaDAO();
        DefaultTableModel model = (DefaultTableModel)jTableMostrar.getModel();
        String[] row = new String[12];
        ArrayList<Persona> listaPersonas = daoPersona.getListaPersonas();
        for(Persona p: listaPersonas){
            row[0]  = String.valueOf(p.getRut());
            row[1]  = p.getNombre();
            row[2]  = p.getApellidoPat();
            row[3]  = p.getApellidoMat();
            row[4]  = p.getFechaNacimiento();
            row[5]  = p.getDireccion();
            row[6]  = String.valueOf(p.getIdCiudad());
            row[7]  = String.valueOf(p.getSueldoBase());
            row[8]  = String.valueOf(p.getBonoColacion());
            row[9]  = String.valueOf(p.getBonoMovilizacion());
            row[10] = String.valueOf(p.getIdAfp());            
            row[11] = String.valueOf(p.getDv());
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableMostrar = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableStack = new javax.swing.JTable();
        jButtonLimpiarLista = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButtonEliminarDeLista = new javax.swing.JButton();
        jButtonSeleccionarTodo = new javax.swing.JButton();
        comboFecha = new javax.swing.JComboBox<>();

        setClosable(true);
        setTitle("Pagos Multiples");

        jTableMostrar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Rut", "Nombre", "Apellido Paterno", "Apellido Materno", "Fecha de Nacimiento", "Dirección", "Ciudad", "Sueldo Base", "Bono Colación", "Bono Movilización", "AFP", "DV"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableMostrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMostrarMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableMostrar);
        if (jTableMostrar.getColumnModel().getColumnCount() > 0) {
            jTableMostrar.getColumnModel().getColumn(4).setMinWidth(0);
            jTableMostrar.getColumnModel().getColumn(4).setPreferredWidth(0);
            jTableMostrar.getColumnModel().getColumn(4).setMaxWidth(0);
            jTableMostrar.getColumnModel().getColumn(5).setMinWidth(0);
            jTableMostrar.getColumnModel().getColumn(5).setPreferredWidth(0);
            jTableMostrar.getColumnModel().getColumn(5).setMaxWidth(0);
            jTableMostrar.getColumnModel().getColumn(6).setMinWidth(0);
            jTableMostrar.getColumnModel().getColumn(6).setPreferredWidth(0);
            jTableMostrar.getColumnModel().getColumn(6).setMaxWidth(0);
            jTableMostrar.getColumnModel().getColumn(7).setMinWidth(0);
            jTableMostrar.getColumnModel().getColumn(7).setPreferredWidth(0);
            jTableMostrar.getColumnModel().getColumn(7).setMaxWidth(0);
            jTableMostrar.getColumnModel().getColumn(8).setMinWidth(0);
            jTableMostrar.getColumnModel().getColumn(8).setPreferredWidth(0);
            jTableMostrar.getColumnModel().getColumn(8).setMaxWidth(0);
            jTableMostrar.getColumnModel().getColumn(9).setMinWidth(0);
            jTableMostrar.getColumnModel().getColumn(9).setPreferredWidth(0);
            jTableMostrar.getColumnModel().getColumn(9).setMaxWidth(0);
            jTableMostrar.getColumnModel().getColumn(10).setMinWidth(0);
            jTableMostrar.getColumnModel().getColumn(10).setPreferredWidth(0);
            jTableMostrar.getColumnModel().getColumn(10).setMaxWidth(0);
            jTableMostrar.getColumnModel().getColumn(11).setMinWidth(0);
            jTableMostrar.getColumnModel().getColumn(11).setPreferredWidth(0);
            jTableMostrar.getColumnModel().getColumn(11).setMaxWidth(0);
        }

        jTableStack.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Rut", "Nombre", "Apellido Paterno", "Apellido Materno", "Fecha de Nacimiento", "Dirección ", "Ciudad", "Sueldo Base", "Bono Colación", "Bono Movilización", "AFP", "DV"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableStack);
        if (jTableStack.getColumnModel().getColumnCount() > 0) {
            jTableStack.getColumnModel().getColumn(4).setMinWidth(0);
            jTableStack.getColumnModel().getColumn(4).setPreferredWidth(0);
            jTableStack.getColumnModel().getColumn(4).setMaxWidth(0);
            jTableStack.getColumnModel().getColumn(5).setMinWidth(0);
            jTableStack.getColumnModel().getColumn(5).setPreferredWidth(0);
            jTableStack.getColumnModel().getColumn(5).setMaxWidth(0);
            jTableStack.getColumnModel().getColumn(6).setMinWidth(0);
            jTableStack.getColumnModel().getColumn(6).setPreferredWidth(0);
            jTableStack.getColumnModel().getColumn(6).setMaxWidth(0);
            jTableStack.getColumnModel().getColumn(7).setMinWidth(0);
            jTableStack.getColumnModel().getColumn(7).setPreferredWidth(0);
            jTableStack.getColumnModel().getColumn(7).setMaxWidth(0);
            jTableStack.getColumnModel().getColumn(8).setMinWidth(0);
            jTableStack.getColumnModel().getColumn(8).setPreferredWidth(0);
            jTableStack.getColumnModel().getColumn(8).setMaxWidth(0);
            jTableStack.getColumnModel().getColumn(9).setMinWidth(0);
            jTableStack.getColumnModel().getColumn(9).setPreferredWidth(0);
            jTableStack.getColumnModel().getColumn(9).setMaxWidth(0);
            jTableStack.getColumnModel().getColumn(10).setMinWidth(0);
            jTableStack.getColumnModel().getColumn(10).setPreferredWidth(0);
            jTableStack.getColumnModel().getColumn(10).setMaxWidth(0);
            jTableStack.getColumnModel().getColumn(11).setMinWidth(0);
            jTableStack.getColumnModel().getColumn(11).setPreferredWidth(0);
            jTableStack.getColumnModel().getColumn(11).setMaxWidth(0);
        }

        jButtonLimpiarLista.setText("Limpiar lista");
        jButtonLimpiarLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimpiarListaActionPerformed(evt);
            }
        });

        jButton3.setText("Pagar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setText("Fecha de Pago:");

        jButtonEliminarDeLista.setText("Eliminar de la lista");
        jButtonEliminarDeLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarDeListaActionPerformed(evt);
            }
        });

        jButtonSeleccionarTodo.setText("Seleccionar todo");
        jButtonSeleccionarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSeleccionarTodoActionPerformed(evt);
            }
        });

        comboFecha.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(128, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonSeleccionarTodo)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButtonLimpiarLista)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonEliminarDeLista))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(comboFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3))))
                .addGap(104, 104, 104))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonSeleccionarTodo)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonLimpiarLista)
                    .addComponent(jButtonEliminarDeLista))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jLabel1)
                    .addComponent(comboFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonLimpiarListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimpiarListaActionPerformed
        // TODO add your handling code here:
        
        //DefaultTableModel model = (DefaultTableModel)jTableMostrar.getModel();
        //model.setRowCount(0);
        //mostrarListaPersonasInTable();
    }//GEN-LAST:event_jButtonLimpiarListaActionPerformed
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        float descuentoAfp = 0;
        float sueldoBruto  = 0;
        float descuentoCesantia = 0;
        AfpDAO afp      = new AfpDAO();
        PersonaDAO p    = new PersonaDAO();
        DefaultTableModel modelStack = (DefaultTableModel)jTableStack.getModel();
        ArrayList<Remuneracion> listaRemuneraciones = new ArrayList<Remuneracion>();
        
        int idMes = comboFecha.getSelectedIndex() + 1;
        for(int i = 0; i < modelStack.getRowCount(); i++){
            int rut = Integer.parseInt(modelStack.getValueAt(i, 0).toString());
            //System.out.println(modelStack.getValueAt(i, 0));
            int comision = p.consultarComisiones(rut,Integer.toString(idMes));
            sueldoBruto = Integer.parseInt(modelStack.getValueAt(i, 7).toString())  + Integer.parseInt(modelStack.getValueAt(i, 8).toString()) + Integer.parseInt(modelStack.getValueAt(i, 9).toString())+ comision;
            
            descuentoAfp = (sueldoBruto * (afp.consultarDescuento(Integer.parseInt(modelStack.getValueAt(i, 10).toString()))/100)); 
            descuentoCesantia = (float) (sueldoBruto * 0.024);
            float descuentoRenta = this.impuestoRenta(sueldoBruto);
            
            float sueldoLiquido = sueldoBruto - descuentoCesantia - descuentoAfp - descuentoRenta;
            
            int year = Calendar.getInstance().get(Calendar.YEAR);
        
            int dia = Calendar.getInstance().get(Calendar.DAY_OF_MONTH);
            String fechaFinal = Integer.toString(year) + "-"+ Integer.toString(idMes)+ "-"+Integer.toString(dia);

            Remuneracion rem = new Remuneracion(fechaFinal,  (int)sueldoBruto,sueldoLiquido,descuentoCesantia,descuentoAfp,descuentoRenta,comision,Integer.parseInt(modelStack.getValueAt(i, 0).toString()));
    
            listaRemuneraciones.add(rem);
            
        }
        RemuneracionDAO r = new RemuneracionDAO();
        r.registrarPagos(listaRemuneraciones);
    }//GEN-LAST:event_jButton3ActionPerformed
    private float impuestoRenta(float valor){
    
        if (valor <= 634122) {
            return valor*0;
        } else if(634122 < valor && valor <= 1409160){
            return (float) (valor*0.04);
        } else if (1409160 < valor && valor <= 2348600){
            return (float) (valor*0.08);
        } else if (2348600 < valor && valor <= 3288040) {
            return (float) (valor*0.135);
        } else if (3288040 < valor && valor <=  4227480) {
            return (float) (valor*0.23);
        } else if (4227480 < valor && valor <=  5636640) {
            return (float) (valor*0.304);
        } else if (5636640 < valor) {
            return (float) (valor*0.35);
        }
        
        return 0;
    
    }
    private void jTableMostrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMostrarMouseClicked
        // TODO add your handling code here:
        DefaultTableModel modelStack = (DefaultTableModel)jTableStack.getModel();
        int i = jTableMostrar.getSelectedRow();
        TableModel model = jTableMostrar.getModel();
        String[] row = new String[12];
        row[0]  = model.getValueAt(i,0).toString();
        row[1]  = model.getValueAt(i,1).toString();
        row[2]  = model.getValueAt(i,2).toString();
        row[3]  = model.getValueAt(i,3).toString();
        row[4]  = model.getValueAt(i,4).toString();
        row[5]  = model.getValueAt(i,5).toString();
        row[6]  = model.getValueAt(i,6).toString();
        row[7]  = model.getValueAt(i,7).toString();
        row[8]  = model.getValueAt(i,8).toString();
        row[9]  = model.getValueAt(i,9).toString();
        row[10]  = model.getValueAt(i,10).toString();
        row[11]  = model.getValueAt(i,11).toString();
        modelStack.addRow(row);
        ((DefaultTableModel)jTableMostrar.getModel()).removeRow(i);
        //modelStack.addTableModelListener(jTableMostrar.getModel());
        //jTableStack.setModel(model);
    }//GEN-LAST:event_jTableMostrarMouseClicked

    private void jButtonSeleccionarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSeleccionarTodoActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)jTableMostrar.getModel();
        jTableStack.setModel(model);
        //model.setRowCount(0);
    }//GEN-LAST:event_jButtonSeleccionarTodoActionPerformed

    private void jButtonEliminarDeListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarDeListaActionPerformed
        // TODO add your handling code here:
        DefaultTableModel modelMostrar = (DefaultTableModel)jTableMostrar.getModel();
        int i = jTableStack.getSelectedRow();
        TableModel model = jTableStack.getModel();
        String[] row = new String[12];
        row[0]  = model.getValueAt(i,0).toString();
        row[1]  = model.getValueAt(i,1).toString();
        row[2]  = model.getValueAt(i,2).toString();
        row[3]  = model.getValueAt(i,3).toString();
        row[4]  = model.getValueAt(i,4).toString();
        row[5]  = model.getValueAt(i,5).toString();
        row[6]  = model.getValueAt(i,6).toString();
        row[7]  = model.getValueAt(i,7).toString();
        row[8]  = model.getValueAt(i,8).toString();
        row[9]  = model.getValueAt(i,9).toString();
        row[10]  = model.getValueAt(i,10).toString();
        row[11]  = model.getValueAt(i,11).toString();
        modelMostrar.addRow(row);
        ((DefaultTableModel)jTableStack.getModel()).removeRow(i);
    }//GEN-LAST:event_jButtonEliminarDeListaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboFecha;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButtonEliminarDeLista;
    private javax.swing.JButton jButtonLimpiarLista;
    private javax.swing.JButton jButtonSeleccionarTodo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableMostrar;
    private javax.swing.JTable jTableStack;
    // End of variables declaration//GEN-END:variables
}
